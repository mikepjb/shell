set nocompatible
filetype plugin indent on
syn on

set mouse=a
set nu
set hidden
set clipboard=unnamed,unnamedplus
set noswapfile nobackup undofile
set undodir='~/.vim/undodir'
set textwidth=79 colorcolumn=+1
set ignorecase smartcase
set nolazyredraw
set nowrap nospell shortmess+=I
set tabstop=4 shiftwidth=4 expandtab autoindent
set gdefault
set grepprg=grep\ -rn\ $*\ .

set wildmenu                    " visual autocomplete for command menu
set wildmode=longest:full,full  " complete longest common string, then each full match
set wildignore=*.o,*.obj,*.pyc,*.swp,*.bak,*.class,*/.git/*,*/node_modules/*
set path+=**                    " search down into subfolders with :find
set wildcharm=<Tab>

let g:netrw_liststyle = 3       " tree view
let g:netrw_banner = 0          " disable banner
let g:netrw_browse_split = 4    " open in previous window

augroup Base
    autocmd!
    autocmd FileType netrw nnoremap <buffer> S <C-^>
augroup END

" -- Appearance ---------------------------------------------------------------
colorscheme spartan

set laststatus=2
set fillchars+=stl:─,stlnc:─,vert:│
set stl=──\ %#User1#%f%*%<\ (%{&ft})%m%r%h%w\ %=\ (\ %3l,%3c\,%3p%%\ )

" -- Bindings -----------------------------------------------------------------
function! Tree()
    let tree_buf = bufnr('tree')
    if tree_buf != -1
        execute 'buffer' tree_buf
        setl ma | %delete _
    else
        enew | setl bt=nofile bh=hide noswf nonu ro | file tree
    endif
    sil r !tree -a -I .git --gitignore --prune --noreport
    sil! g/^$/d | norm! gg
    setl noma
endfunction

inoremap <C-c> <Esc>
nnoremap <C-g> :noh<CR><C-g>
nnoremap <C-h> <C-w><C-h>
nnoremap <C-j> <C-w><C-j>
nnoremap <C-k> <C-w><C-k>
nnoremap <C-l> <C-w><C-l>
nnoremap <C-q> :q<CR>
nnoremap <space> :find *
nnoremap Q @q
nnoremap S <C-^>
nnoremap gD g<C-]>
nnoremap <C-u> :call Tree()<CR>
nnoremap gd <C-]>
nnoremap ge :e <C-r>=len(expand('%:h')) ? expand('%:h') : getcwd()<CR>/
nnoremap gi :e ~/.vimrc<CR>
nnoremap gn :e ~/.tmp-notes<CR> " temp for now, needs a better name/setup
nnoremap gr :grep<space>
nnoremap go :copen<CR>
nnoremap gj :cnext<CR>
nnoremap gk :cprev<CR>

function! SynGroup()
    let l:s = synID(line('.'), col('.'), 1)
    echo synIDattr(l:s, 'name') . ' -> ' . synIDattr(synIDtrans(l:s), 'name')
endfunc

nnoremap zA :call SynGroup()<CR>

" -- Language -----------------------------------------------------------------

au FileType javascript,typescript,html,css,yaml,json,ruby setlocal ts=2 sw=2

set tags=./tags
au FileType go set tags+=~/.tags/go.tags
au FileType clojure,java set tags+=~/.tags/clojure.tags,~/.tags/java.tags
au FileType javascript,typescript set tags+=~/.tags/node.tags

packadd matchit
